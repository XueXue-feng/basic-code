数据结构：
栈：先进后出
队列：先进先出
数组：查询快；数组的地址是连续的，我们可以通过数组的首地址可以找到数组，通过数组的索引查询数组的数据
     增删慢：数组的长度是固定的，我们想要增/删一个数组就必须创建一个新数组来复制原数组的数据
链表：查询慢， 链表中的结构不是连续的
     增删快：增加删除一个元素对链表的整体结构没有影响
单向链表：不能保证元素的顺序，存取的顺序可能不一致，自己的地址 数据 下一个地址的数据
双向链表：有一条链是专门记录顺序的
红黑树：二叉树：分支不能超过两个
      查找树/排序树：在二叉树的基础上元素有大小顺序，左子树小右子树大
      红黑树：趋近于平衡树，查询叶子节点的最大次数和最小次数不能超过2倍，查询速度非常快
      约束条件：节点可以是红色的或者是黑色的，根节点必须是黑色的，叶子节点是黑色的，每个红色的节点的子节点都是黑色的，任何一个叶子节点的所有路径上黑色叶子节点
      是相同的